package view;

import controller.ControleBusca;
import controller.ControleCadastro;
import controller.ControleDeListagem;
import controller.IControleBusca;
import controller.IControleCadastro;
import controller.IControleListagem;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import model.bean.Vendedor;

/**
 *
 * @author gomes
 */
public class ListarVendedores extends javax.swing.JFrame {

    private String cpf_selecionado = null;
    public ListarVendedores() {
        initComponents();
        this.read();
        this.read.setEnabled(false);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        BuscarNome = new javax.swing.JButton();
        dados = new javax.swing.JButton();
        read = new javax.swing.JButton();
        deletar = new javax.swing.JButton();
        buscarCpf = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela de listagem de cliente");
        setResizable(false);

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "RG", "Nome", "Email", "Cidade", "Bairro", "rua"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.setToolTipText("");
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        tabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        BuscarNome.setText("Buscar Pelo nome do Vendedor");
        BuscarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarNomeActionPerformed(evt);
            }
        });

        dados.setText("Mais dados de Telefone e Endere√ßo");
        dados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dadosActionPerformed(evt);
            }
        });

        read.setText("Voltar ao Normal");
        read.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readActionPerformed(evt);
            }
        });

        deletar.setText("Deletar");
        deletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletarActionPerformed(evt);
            }
        });

        buscarCpf.setText("Buscar Pelo CPF do Vendedor");
        buscarCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarCpfActionPerformed(evt);
            }
        });

        jButton2.setText("Vendas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BuscarNome)
                    .addComponent(read)
                    .addComponent(buscarCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dados)
                        .addGap(45, 45, 45)
                        .addComponent(deletar))
                    .addComponent(jButton2))
                .addContainerGap(656, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BuscarNome)
                    .addComponent(dados)
                    .addComponent(deletar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarCpf)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(read)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private String getCpf_selecionado() {
        return cpf_selecionado;
    }

    private void setCpf_selecionado(String cpf_selecionado) {
        this.cpf_selecionado = cpf_selecionado;
    }
    private void tabelaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaKeyPressed
        if (this.tabela.getSelectedRow() != -1) {
            this.setCpf_selecionado(this.tabela.getValueAt(this.tabela.getSelectedRow(), 0).toString());
        }
    }//GEN-LAST:event_tabelaKeyPressed

    private void BuscarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarNomeActionPerformed
        String nome = JOptionPane.showInputDialog("Digite o nome do Vendedor!");
        IControleBusca i = new ControleBusca();
        ArrayList<Vendedor> lista = i.BuscaVendedorNome(nome);
        if (lista.size() > 0) {
            DefaultTableModel modelo = (DefaultTableModel) this.tabela.getModel();
            modelo.setNumRows(0); //eliminar duplicadas do java 

            for (Vendedor c : lista) {
                modelo.addRow(new Object[]{
                    c.getCpf(),
                    c.getRg(),
                    c.getNome(),
                    c.getEmail(),
                    c.getCidade(),
                    c.getBairro(),
                    c.getRua()
                });
            }
            this.read.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "Sem resultados");
            this.read();

        }

    }//GEN-LAST:event_BuscarNomeActionPerformed

    private void readActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readActionPerformed
        this.read();
        this.read.setEnabled(false);
    }//GEN-LAST:event_readActionPerformed

    private void dadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dadosActionPerformed

        if (this.tabela.getSelectedRow() != -1) {
            IControleBusca i = new ControleBusca();
            Vendedor c = i.buscaVendedorCpf(this.getCpf_selecionado());
            //Vendedor c = i.ClienteBuscaCpf(this.getCpf_selecionado());
            JOptionPane.showMessageDialog(null, "Vendedor: " + c.getCpf() + " MORA EM: " + c.getCidade() + " NO BAIRRO:" + c.getBairro() + " \n"
                    + "NA RUA: " + c.getRua() + " COM CASA DE NUMERO: " + c.getNumero() + "\n"
                    + "COMPLEMENTO: " + c.getComplemento() + "\n"
                    + "Telefone1: " + c.getTelefone1() + " Telefone2: " + c.getTelefone2());
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha depois clique nesse botao");
        }
    }//GEN-LAST:event_dadosActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        if (this.tabela.getSelectedRow() != -1) {
            this.setCpf_selecionado(this.tabela.getValueAt(this.tabela.getSelectedRow(), 0).toString());
        }
    }//GEN-LAST:event_tabelaMouseClicked

    private void buscarCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarCpfActionPerformed
        String cpf = JOptionPane.showInputDialog("Digite o cpf do Vendedor");
        IControleBusca i = new ControleBusca();
        Vendedor c = i.buscaVendedorCpf(cpf);
//        Cliente c = i.ClienteBuscaCpf(cpf);
        if (c != null && !cpf.equals("")) {
            DefaultTableModel modelo = (DefaultTableModel) this.tabela.getModel();
            modelo.setNumRows(0);
            modelo.addRow(new Object[]{
                c.getCpf(),
                c.getRg(),
                c.getNome(),
                c.getEmail(),
                c.getCidade(),
                c.getBairro(),
                c.getRua()
            });
            this.read.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "Sem resultados");
            this.read();
        }
    }//GEN-LAST:event_buscarCpfActionPerformed

    private void deletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletarActionPerformed
        if (this.tabela.getSelectedRow() != -1) {
            int confirma = JOptionPane.showConfirmDialog(null, "Deseja deletar este Cliente?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (confirma == JOptionPane.YES_OPTION) {
                IControleCadastro i = new ControleCadastro();
                i.DeletarVendedorCpf(this.getCpf_selecionado());
                this.read();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione uma tabela depois tente remover \n"
                    + "SE REALMENTE QUIZER CLARO!!!");
        }
    }//GEN-LAST:event_deletarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarVendedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarVendedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarVendedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarVendedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarVendedores().setVisible(true);
            }
        });
    }

    public void read() {
        DefaultTableModel modelo = (DefaultTableModel) this.tabela.getModel();
        modelo.setNumRows(0); //eliminar duplicadas do java 
        IControleListagem i = ControleDeListagem.getInstace();
        for (Vendedor c : i.Vendedores()) {
            modelo.addRow(new Object[]{
                c.getCpf(),
                c.getRg(),
                c.getNome(),
                c.getEmail(),
                c.getCidade(),
                c.getBairro(),
                c.getRua()
            });
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuscarNome;
    private javax.swing.JButton buscarCpf;
    private javax.swing.JButton dados;
    private javax.swing.JButton deletar;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton read;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

}
